@model QontrolSystem.Models.ViewModels.UserList
@{
    ViewBag.Title = "User Management";
    Layout = "~/Views/Shared/_DashboardGrid.cshtml";
}
@section Styles {
    <link href="~/css/user-management/user-management.css" rel="stylesheet" />
}

@* 
<div>
    <a href="@Url.Action("Dashboard", "Admin")" class="back-btn"> Back </a>
</div> *@

<div class="user-management-container">
    <h2 class="page-title">System Users</h2>

    <div class="header-actions">

        <!-- First row: Create, Search input, Search button -->
        <div class="top-row">
            <a class="create-btn" href="@Url.Action("Create")">âž• Create New User</a>

            <form asp-action="UserManagementIndex" method="get" class="search-form" style="display:flex; gap:0.5rem;">
                <input type="text" name="searchString" value="@Context.Request.Query["searchString"]" class="search-input" placeholder="Search users..." />
                <button type="submit" class="search-btn">Search</button>
            </form>
        </div>

        <!-- Second row: Filters -->
        <form asp-action="UserManagementIndex" method="get" class="filter-form">
            <select name="roleFilter" class="filter-dropdown">
                <option value="">All Roles</option>
                @foreach (var role in ViewBag.Roles as List<string>)
                {
                    var selected = Context.Request.Query["roleFilter"] == role ? "selected" : null;
                    <option value="@role" selected="@selected">@role</option>
                }
            </select>

            <select name="isActiveFilter" class="filter-dropdown">
                <option value="">All Statuses</option>
                @{
                    var isActive = Context.Request.Query["isActiveFilter"];
                }
                <option value="true" selected="@(isActive == "true" ? "selected" : null)">Active</option>
                <option value="false" selected="@(isActive == "false" ? "selected" : null)">Inactive</option>
            </select>

            <select name="departmentFilter" class="filter-dropdown">
                <option value="">All Departments</option>
                @foreach (var dept in ViewBag.Departments as List<string>)
                {
                    var selected = Context.Request.Query["departmentFilter"] == dept ? "selected" : null;
                    <option value="@dept" selected="@selected">@dept</option>
                }
            </select>

            <button type="submit" class="filter-btn">Apply Filters</button>
        </form>

    </div>
         
    <div class="users-table-container">
        @if (Model != null && Model.Users.Any())
        {
            <table class="users-table">
                <thead class="table-header">
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Department</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody class="table-body">
                    @foreach (var user in Model.Users)
                    {
                    <tr>
                            <td data-label="Name">@user.FirstName @user.LastName</td>
                            <td data-label="Email">@user.Email</td>
                            <td data-label="Role">@user.Role.RoleName</td>
                            <td data-label="Department">@user.Department.DepartmentName</td>
                            <td data-label="Actions">
                            <div class="action-buttons">
                                <a class="action-btn btn-details" href="@Url.Action("Details", new { id = user.UserID })">
                                    Details
                                </a>
                                <a class="action-btn btn-edit" href="@Url.Action("Edit", new { id = user.UserID, returnUrl = Context.Request.Path + Context.Request.QueryString })">
                                    Edit
                                </a>
                                <a class="action-btn btn-delete" href="@Url.Action("Delete", new { id = user.UserID })">
                                    Delete
                                </a>
                            </div>
                        </td>
                    </tr>                        
                    }
                </tbody>
            </table>
            @if (Model.TotalPages > 1)
            {
                <div class="pagination">
                    @* Previous button *@
                    <a class="page-link @(Model.CurrentPage == 1 ? "disabled" : "")"
                       href="@Url.Action("UserManagementIndex", new {
                           page = Model.CurrentPage - 1,
                           searchString = Model.SearchString,
                           roleFilter = Model.RoleFilter,
                           departmentFilter = Model.DepartmentFilter,
                           isActiveFilter = Model.IsActiveFilter
                       })"
                       @(Model.CurrentPage == 1 ? "tabindex='-1' aria-disabled='true'" : "")>
                        &laquo; Prev
                    </a>

                    @* Page numbers *@
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        var activeClass = i == Model.CurrentPage ? "active" : "";
                        <a class="page-link @activeClass"
                           href="@Url.Action("UserManagementIndex", new {
                               page = i,
                               searchString = Model.SearchString,
                               roleFilter = Model.RoleFilter,
                               departmentFilter = Model.DepartmentFilter,
                               isActiveFilter = Model.IsActiveFilter
                           })">@i</a>
                    }

                    @* Next button *@
                    <a class="page-link @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")"
                       href="@Url.Action("UserManagementIndex", new {
                           page = Model.CurrentPage + 1,
                           searchString = Model.SearchString,
                           roleFilter = Model.RoleFilter,
                           departmentFilter = Model.DepartmentFilter,
                           isActiveFilter = Model.IsActiveFilter
                       })"
                       @(Model.CurrentPage == Model.TotalPages ? "tabindex='-1' aria-disabled='true'" : "")>
                        Next &raquo;
                    </a>
                </div>
            }

        }
        else
        {
            <div class="empty-state">
                <h3>No Users Found</h3>
                <p>No users match your search criteria or no users exist in the system.</p>
            </div>
        }
        </div>
    </div>
    </div>
</div>
