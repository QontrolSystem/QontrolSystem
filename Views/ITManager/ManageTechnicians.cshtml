@model IEnumerable<QontrolSystem.Models.ViewModels.ManageTechnicians>
@{
    ViewData["Title"] = "ManageTechnicians";
}

<!-- Button to trigger popup -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#teamUsersModal">
    View Team Users
</button>

<!-- Modal Popup -->
<div class="modal fade" id="teamUsersModal" tabindex="-1" aria-labelledby="teamUsersModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="teamUsersModalLabel">Users in Your Sub-Department</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Calendar Input -->
                <div class="row mb-3">
                    <div class="col-md-4">
                        <label for="filterDate" class="form-label">Filter by Date:</label>
                        <input type="date" class="form-control" id="filterDate" onchange="filterByDate()">
                    </div>
                    <div class="col-md-4">
                        <label for="startDate" class="form-label">Start Date:</label>
                        <input type="date" class="form-control" id="startDate" onchange="filterByDateRange()">
                    </div>
                    <div class="col-md-4">
                        <label for="endDate" class="form-label">End Date:</label>
                        <input type="date" class="form-control" id="endDate" onchange="filterByDateRange()">
                    </div>
                </div>

                @if (!Model.Any())
                {
                    <div class="alert alert-info">
                        No users found for your sub-department.
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered" id="usersTable">
                            <thead class="table-dark">
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Full Name</th>
                                    <th scope="col">Email</th>
                                    <th scope="col">Team</th>
                                    <th scope="col">Role ID</th>
                                    <th scope="col">Active</th>
                                    <th scope="col">Created At</th>
                                    <th scope="col">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model.OrderBy(u => u.FullName))
                                {
                                    <tr data-created-date="@user.CreatedAt.ToString("yyyy-MM-dd")">
                                        <td>@user.UserID</td>
                                        <td>@user.FullName</td>
                                        <td>@user.Email</td>
                                        <td>@user.Team</td>
                                        <td>@user.UserID</td>
                                        <td>
                                            @if (user.IsActive)
                                            {
                                                <span class="badge bg-success">Yes</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">No</span>
                                            }
                                        </td>
                                        <td>@user.CreatedAt.ToString("yyyy-MM-dd")</td>
                                        <td>
                                            <a asp-controller="User" asp-action="Details" asp-route-id="@user.UserID" class="btn btn-sm btn-outline-primary">View</a>
                                            <a asp-controller="User" asp-action="Edit" asp-route-id="@user.UserID" class="btn btn-sm btn-outline-secondary">Edit</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="exportToCSV()">Export CSV</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Filter by single date
    function filterByDate() {
        const filterDate = document.getElementById('filterDate').value;
        const rows = document.querySelectorAll('#usersTable tbody tr');

        rows.forEach(row => {
            const createdDate = row.getAttribute('data-created-date');
            if (!filterDate || createdDate === filterDate) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });

        // Clear date range inputs
        document.getElementById('startDate').value = '';
        document.getElementById('endDate').value = '';
    }

    // Filter by date range
    function filterByDateRange() {
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        const rows = document.querySelectorAll('#usersTable tbody tr');

        if (!startDate || !endDate) return;

        rows.forEach(row => {
            const createdDate = row.getAttribute('data-created-date');
            if (createdDate >= startDate && createdDate <= endDate) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });

        // Clear single date filter
        document.getElementById('filterDate').value = '';
    }

    // Export visible rows to CSV
    function exportToCSV() {
        const table = document.getElementById('usersTable');
        const rows = table.querySelectorAll('tr');
        let csv = [];

        rows.forEach((row, index) => {
            if (row.style.display !== 'none') {
                const cells = row.querySelectorAll('th, td');
                const rowData = [];

                cells.forEach((cell, cellIndex) => {
                    if (cellIndex < cells.length - 1) { // Skip Actions column
                        rowData.push('"' + cell.textContent.trim().replace(/"/g, '""') + '"');
                    }
                });

                if (rowData.length > 0) {
                    csv.push(rowData.join(','));
                }
            }
        });

        const csvContent = csv.join('\n');
        const blob = new Blob([csvContent], { type: 'text/csv' });
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'team-users-' + new Date().toISOString().split('T')[0] + '.csv';
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        window.URL.revokeObjectURL(url);
    }

  
</script>