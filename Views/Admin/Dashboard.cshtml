@using System.Text.Json
@{
    ViewData["Title"] = "Admin Dashboard";
}
@section Styles {
    <link href="~/css//admin/admin-dashboard.css" rel="stylesheet" />
}
@if (TempData["SuccessMessage"] != null)
{
    <div id="toast-message">
        <partial name="_successToaster" />
    </div>
    
}

<div class="dashboard-container">
    <h2 class="dashboard-title">Welcome, System Administrator</h2>

    <!-- Summary Cards -->
    <div class="stats-grid">
        <a asp-controller="UserManagement" asp-action="UserManagementIndex" class="stat-card-link">
            <div class="stat-card">
                <h5 class="stat-title">Total Users</h5>
                <p class="stat-number"><span class="count" data-count="@ViewBag.UserCount">0</span></p>
            </div>
        </a>

        <a asp-controller="UserManagement" asp-action="Technicians" class="stat-card-link">
            <div class="stat-card technicians">            
                <h5 class="stat-title">Active Technicians</h5>
                <p class="stat-number"><span class="count" data-count="@ViewBag.TechnicianCount">0</span></p>
            </div>
        </a>

        <a asp-controller="UserManagement" asp-action="Managers" class="stat-card-link">
            <div class="stat-card managers">
                <h5 class="stat-title">Active Managers</h5>
                <p class="stat-number"><span class="count" data-count="@ViewBag.ManagerCount">0</span></p>
            </div>
        </a>

        <a asp-controller="Admin" asp-action="ApproveUsers" class="stat-card-link">
            <div class="stat-card technicians">
                <h5 class="stat-title">Pending Users</h5>
                <p class="stat-number"><span class="count" data-count="@ViewBag.PendingUserCount">0</span></p>
            </div>
        </a>
    </div>

    <div class="content-grid">
        <div class="chart-card">
            <h5 class="chart-title">User Status Overview</h5>
            <div class="chart-container">
                <canvas id="usersChart"></canvas>
            </div>
        </div>

        <div class="quick-links-section">
            <h5 class="quick-links-title">Quick Links</h5>
            <ul class="links-list">
                <li class="link-item">
                    <a href="#" class="link-anchor">📈 View Reports</a>
                </li>
                <li class="link-item">
                    <a asp-controller="Departments" asp-action="Index" class="link-anchor">🏢 Manage Departments</a>
                </li>
            </ul>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('usersChart').getContext('2d');

    const departmentLabels = @Html.Raw(Json.Serialize(ViewBag.DepartmentLabels));
    const departmentCounts = @Html.Raw(Json.Serialize(ViewBag.DepartmentCounts));

    const usersChart = new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: departmentLabels,
            datasets: [{
                label: 'Users per Department',
                data: departmentCounts,
                backgroundColor: [
                    '#3b82f6', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6', '#14b8a6',
                    '#e11d48', '#0ea5e9', '#6366f1', '#84cc16'
                ],
                borderColor: '#fff',
                borderWidth: 2,
                hoverOffset: 6
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom',
                    labels: {
                        padding: 20,
                        usePointStyle: true,
                        font: {
                            size: 14
                        }
                    }
                }
            }
        }
    });

        document.addEventListener("DOMContentLoaded", function () {
        const counters = document.querySelectorAll('.count');
        const duration = 1000; // 1 second

        counters.forEach(counter => {
            const target = +counter.getAttribute('data-count');
            const stepTime = Math.max(Math.floor(duration / target), 10);
            let count = 0;

            const updateCounter = () => {
                count++;
                counter.innerText = count;
                if (count < target) {
                    setTimeout(updateCounter, stepTime);
                } else {
                    counter.innerText = target;
                }
            };

            updateCounter();
        });
    });


    // Toaster//
        document.addEventListener('DOMContentLoaded', function() {
        const toastMessage = document.getElementById('toast-message');

        if (toastMessage) {
            
            setTimeout(function() {
                toastMessage.classList.add('fade-out');

             
                setTimeout(function() {
                    toastMessage.remove();
                }, 500); 
            }, 5000);
        }
    });

</script>
