// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QontrolSystem.Data;

#nullable disable

namespace QontrolSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250731155224_ConfigureCategorySubDepartmentRelationship")]
    partial class ConfigureCategorySubDepartmentRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QontrolSystem.Models.Accounts.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            DepartmentName = "HR"
                        },
                        new
                        {
                            DepartmentID = 2,
                            DepartmentName = "Finance"
                        },
                        new
                        {
                            DepartmentID = 3,
                            DepartmentName = "Operations"
                        },
                        new
                        {
                            DepartmentID = 4,
                            DepartmentName = "IT Department"
                        });
                });

            modelBuilder.Entity("QontrolSystem.Models.Accounts.ITSubDepartment", b =>
                {
                    b.Property<int>("ITSubDepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ITSubDepartmentID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ITSubDepartmentID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("ITSubDepartments");

                    b.HasData(
                        new
                        {
                            ITSubDepartmentID = 1,
                            DepartmentID = 4,
                            SubDepartmentName = "Software"
                        },
                        new
                        {
                            ITSubDepartmentID = 2,
                            DepartmentID = 4,
                            SubDepartmentName = "Hardware"
                        },
                        new
                        {
                            ITSubDepartmentID = 3,
                            DepartmentID = 4,
                            SubDepartmentName = "Network"
                        },
                        new
                        {
                            ITSubDepartmentID = 4,
                            DepartmentID = 4,
                            SubDepartmentName = "Security"
                        });
                });

            modelBuilder.Entity("QontrolSystem.Models.Accounts.PasswordResetOtp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("OtpCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PasswordResetOtps");
                });

            modelBuilder.Entity("QontrolSystem.Models.Accounts.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleName = "Employee"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleName = "Technician"
                        },
                        new
                        {
                            RoleID = 3,
                            RoleName = "IT Manager"
                        },
                        new
                        {
                            RoleID = 4,
                            RoleName = "System Administrator"
                        });
                });

            modelBuilder.Entity("QontrolSystem.Models.Accounts.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ITSubDepartmentID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ITSubDepartmentID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Attachment", b =>
                {
                    b.Property<int>("TicketAttachmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketAttachmentID"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TicketAttachmentID");

                    b.HasIndex("TicketID");

                    b.ToTable("TicketAttachments");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Category", b =>
                {
                    b.Property<int>("TicketCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketCategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.HasKey("TicketCategoryID");

                    b.HasIndex("SubDepartmentID");

                    b.ToTable("TicketCategories");

                    b.HasData(
                        new
                        {
                            TicketCategoryID = 1,
                            CategoryName = "Hardware"
                        },
                        new
                        {
                            TicketCategoryID = 2,
                            CategoryName = "Software"
                        },
                        new
                        {
                            TicketCategoryID = 3,
                            CategoryName = "Network"
                        },
                        new
                        {
                            TicketCategoryID = 4,
                            CategoryName = "Security"
                        },
                        new
                        {
                            TicketCategoryID = 5,
                            CategoryName = "Other"
                        });
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Feedback", b =>
                {
                    b.Property<int>("TicketFeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketFeedbackId"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("TicketFeedbackId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketFeedbacks");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Status", b =>
                {
                    b.Property<int>("TicketStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketStatusID"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketStatusID");

                    b.ToTable("TicketStatuses");

                    b.HasData(
                        new
                        {
                            TicketStatusID = 1,
                            StatusName = "Open"
                        },
                        new
                        {
                            TicketStatusID = 2,
                            StatusName = "In Progress"
                        },
                        new
                        {
                            TicketStatusID = 3,
                            StatusName = "Resolved"
                        },
                        new
                        {
                            TicketStatusID = 4,
                            StatusName = "Closed"
                        });
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Tickets", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketID"));

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketCategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("TicketFeedbackID")
                        .HasColumnType("int");

                    b.Property<int>("TicketStatusID")
                        .HasColumnType("int");

                    b.Property<int>("TicketUrgencyID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TicketID");

                    b.HasIndex("AssignedTo");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("TicketCategoryID");

                    b.HasIndex("TicketStatusID");

                    b.HasIndex("TicketUrgencyID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Urgency", b =>
                {
                    b.Property<int>("TicketUrgencyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketUrgencyID"));

                    b.Property<string>("UrgencyLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketUrgencyID");

                    b.ToTable("TicketUrgencies");

                    b.HasData(
                        new
                        {
                            TicketUrgencyID = 1,
                            UrgencyLevel = "Low"
                        },
                        new
                        {
                            TicketUrgencyID = 2,
                            UrgencyLevel = "Medium"
                        },
                        new
                        {
                            TicketUrgencyID = 3,
                            UrgencyLevel = "High"
                        },
                        new
                        {
                            TicketUrgencyID = 4,
                            UrgencyLevel = "Critical"
                        });
                });

            modelBuilder.Entity("QontrolSystem.Models.Accounts.ITSubDepartment", b =>
                {
                    b.HasOne("QontrolSystem.Models.Accounts.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("QontrolSystem.Models.Accounts.User", b =>
                {
                    b.HasOne("QontrolSystem.Models.Accounts.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QontrolSystem.Models.Accounts.ITSubDepartment", "ITSubDepartment")
                        .WithMany("Users")
                        .HasForeignKey("ITSubDepartmentID");

                    b.HasOne("QontrolSystem.Models.Accounts.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("ITSubDepartment");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Attachment", b =>
                {
                    b.HasOne("QontrolSystem.Models.Ticket.Tickets", "Ticket")
                        .WithMany("TicketAttachments")
                        .HasForeignKey("TicketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Category", b =>
                {
                    b.HasOne("QontrolSystem.Models.Accounts.ITSubDepartment", "ITSubDepartment")
                        .WithMany("TicketCategories")
                        .HasForeignKey("SubDepartmentID");

                    b.Navigation("ITSubDepartment");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Feedback", b =>
                {
                    b.HasOne("QontrolSystem.Models.Ticket.Tickets", "Ticket")
                        .WithMany("TicketFeedbacks")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Tickets", b =>
                {
                    b.HasOne("QontrolSystem.Models.Accounts.User", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssignedTo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QontrolSystem.Models.Accounts.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QontrolSystem.Models.Accounts.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QontrolSystem.Models.Ticket.Category", "TicketCategory")
                        .WithMany("Tickets")
                        .HasForeignKey("TicketCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QontrolSystem.Models.Ticket.Status", "TicketStatus")
                        .WithMany("Tickets")
                        .HasForeignKey("TicketStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QontrolSystem.Models.Ticket.Urgency", "TicketUrgency")
                        .WithMany("Tickets")
                        .HasForeignKey("TicketUrgencyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("Creator");

                    b.Navigation("Department");

                    b.Navigation("TicketCategory");

                    b.Navigation("TicketStatus");

                    b.Navigation("TicketUrgency");
                });

            modelBuilder.Entity("QontrolSystem.Models.Accounts.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("QontrolSystem.Models.Accounts.ITSubDepartment", b =>
                {
                    b.Navigation("TicketCategories");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("QontrolSystem.Models.Accounts.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Category", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Status", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Tickets", b =>
                {
                    b.Navigation("TicketAttachments");

                    b.Navigation("TicketFeedbacks");
                });

            modelBuilder.Entity("QontrolSystem.Models.Ticket.Urgency", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
